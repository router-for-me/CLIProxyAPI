# Server port
port: 8317

# Management API settings
remote-management:
  # Whether to allow remote (non-localhost) management access.
  # When false, only localhost can access management endpoints (a key is still required).
  allow-remote: false

  # Management key. If a plaintext value is provided here, it will be hashed on startup.
  # All management requests (even from localhost) require this key.
  # Leave empty to disable the Management API entirely (404 for all /v0/management routes).
  secret-key: ""

  # Disable the bundled management control panel asset download and HTTP route when true.
  disable-control-panel: false

# Authentication directory (supports ~ for home directory)
auth-dir: "~/.cli-proxy-api"

# API keys for authentication
api-keys:
  - "your-api-key-1"
  - "your-api-key-2"

# Enable debug logging
debug: false

# When true, write application logs to rotating files instead of stdout
logging-to-file: false

# When false, disable in-memory usage statistics aggregation
usage-statistics-enabled: false

# Only capture Codex bash JSON to separate files; suppress all other request logs
codex-json-capture-only: false

# Proxy URL. Supports socks5/http/https protocols. Example: socks5://user:pass@192.168.1.1:1080/
proxy-url: ""

# Number of times to retry a request. Retries will occur if the HTTP response code is 403, 408, 500, 502, 503, or 504.
request-retry: 3

# Quota exceeded behavior
quota-exceeded:
  switch-project: true # Whether to automatically switch to another project when a quota is exceeded
  switch-preview-model: true # Whether to automatically switch to a preview model when a quota is exceeded

# API keys for official Generative Language API
#generative-language-api-key:
#  - "AIzaSy...01"
#  - "AIzaSy...02"
#  - "AIzaSy...03"
#  - "AIzaSy...04"

# Codex API keys
#codex-api-key:
#  - api-key: "sk-atSM..."
#    base-url: "https://www.example.com" # use the custom codex API endpoint
#    proxy-url: "socks5://proxy.example.com:1080" # optional: per-key proxy override

# Claude API keys
#claude-api-key:
#  - api-key: "sk-atSM..." # use the official claude API key, no need to set the base url
#  - api-key: "sk-atSM..."
#    base-url: "https://www.example.com" # use the custom claude API endpoint
#    proxy-url: "socks5://proxy.example.com:1080" # optional: per-key proxy override

# OpenAI compatibility providers
#openai-compatibility:
#  - name: "openrouter" # The name of the provider; it will be used in the user agent and other places.
#    base-url: "https://openrouter.ai/api/v1" # The base URL of the provider.
#    # New format with per-key proxy support (recommended):
#    api-key-entries:
#      - api-key: "sk-or-v1-...b780"
#        proxy-url: "socks5://proxy.example.com:1080" # optional: per-key proxy override
#      - api-key: "sk-or-v1-...b781" # without proxy-url
#    # Legacy format (still supported, but cannot specify proxy per key):
#    # api-keys:
#    #   - "sk-or-v1-...b780"
#    #   - "sk-or-v1-...b781"
#    models: # The models supported by the provider.
#      - name: "moonshotai/kimi-k2:free" # The actual model name.
#        alias: "kimi-k2" # The alias used in the API.

# GitHub Copilot OAuth (optional). Defaults are embedded so this block is not required.
#copilot-oauth:
#  auth-url: "https://github.com/login/oauth/authorize"
#  token-url: "https://github.com/login/oauth/access_token"
#  client-id: "<GitHub OAuth App Client ID>"
#  redirect-port: 54556
#  scope: "openid email profile offline_access"
#  github-base-url: "https://github.com"
#  github-api-base-url: "https://api.github.com"
#  github-client-id: "<GitHub Device Flow Client ID>"

# Copilot runtime tuning knobs (optional)
copilot:
  refresh-safety-margin-seconds: 60

# Packycode (optional): forward Claude Code compatible requests to the Packycode upstream
#packycode:
#  enabled: false
#  base-url: "https://codex-api.packycode.com/v1"
#  requires-openai-auth: true
#  wire-api: "responses" # fixed value
#  privacy:
#    disable-response-storage: true
#  defaults:
#    model: "gpt-5"
#    model-reasoning-effort: "high" # one of: low|medium|high
#  credentials:
#    openai-api-key: "sk-OPENAI-XXXX..."

# -----------------------------------------------------------------------------
# Claude Agent SDK for Python（外部服务）对接说明（Breaking Change）：
# - provider=zhipu 仅通过 Python Bridge 路由（无 legacy 回退；禁用将报错）。
# - Bridge URL 默认仅允许本地地址（127.0.0.1/localhost/::1）。
# - 如需放开远端（仅限受控环境），需显式设置：
#     export CLAUDE_AGENT_SDK_ALLOW_REMOTE=true
# - Bridge URL 优先级：config.baseURL > 环境变量 CLAUDE_AGENT_SDK_URL > 内部默认。
# 示例：
#   export CLAUDE_AGENT_SDK_URL="http://127.0.0.1:35331"
# Python 服务需设置以下环境变量以直连智谱 GLM（官方 Anthropic 兼容层）：
#   export ANTHROPIC_BASE_URL="https://open.bigmodel.cn/api/anthropic"
#   export ANTHROPIC_AUTH_TOKEN="<Zhipu API Key>"
# 调用时在 OpenAI 兼容入参中使用模型名："glm-4.6"（或 "glm-4.5"）。
# -----------------------------------------------------------------------------

# Claude Agent SDK for Python 配置（破坏性变更：不兼容旧键）
claude-agent-sdk-for-python:
  enabled: true
  # Python Bridge 服务基础地址；若为空则可由环境变量 CLAUDE_AGENT_SDK_URL 或内部兜底接管
  baseURL: "http://127.0.0.1:35331"
  # 可选：当以 sidecar 方式托管 Python 进程时，通过此处注入环境变量
  # env:
  #   ANTHROPIC_BASE_URL: "https://open.bigmodel.cn/api/anthropic"
  #   ANTHROPIC_AUTH_TOKEN: "glmsk-..."
